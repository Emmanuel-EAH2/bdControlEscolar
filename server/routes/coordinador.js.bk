const express = require('express');
const app = express();
const _ = require('underscore');
const bcrypt = require('bcrypt')
const Coordinador = require('../models/coordinador.js.bk');


app.get('/coordinadores', (req, res)=>{ 
        Coordinador.find({}).exec((err, coordi)=>{
            if(err){
                res.status(400).json({
                    ok: false,
                    msg: 'ocurrio un error',
                    err
        });
            res.json({
            ok: true,
            message: 'Coordinadores consultados con exito',
            conteo: coordi.length,
            coordinadores: coordi
       }); 
    }  
  });
});
 
/*****************FIN DEL GET ******************/
app.post('/coordinadores', (req, res)=>{ 
    let body = req.body;
     let coordi = new Coordinador({
         nombre: body.nombre,
         contraseña: bcrypt.hashSync(body.contraseña, 8),
         repetir_contraseña: body.repetir_contraseña,
         secundaria: body.secundaria
     });

     coordi.save((err, coordiNew)=>{
                if(err || coordi.$isEmpty()){
                    return res.status(400).json({
                    ok: false,
                    msg: 'Ocurrio un error al insertar un coordinador, verifique que todos los campos esten llenos',
                    err
                });
           } 
        res.json({
            ok: true,
            message: 'Coordinador Insertado con exito',
            coordiNew
        });                    
     });
});  

/**********FIN DEL POST ***************/
app.put('/coordinadores/:id', (req, res)=>{
            let id = req.params.id
            let body = _.pick(req.body, ['nombre', 'contraseña']);

    Coordinador.findByIdAndUpdate(id, body, {new: true, runValidators: true, context: 'query'}, (err, coordiMod)=>{
            if(err) {
                return res.status(400).json({
                    ok: false,
                    msg: 'Ocurrio un error al modificar el coordinador',
                    err
                });
        };
                    res.json({
                        ok: true,
                        message: 'Buen trabajo lo haz modificado correctamente',
                        coordiMod
                    });
                });
});

/***************FIN DEL PUT*****************/
app.delete('/coordinadores/:id',(req, res)=>{   
                 let id = req.params.id
     Coordinador.findByIdAndUpdate(id, { estado: false }, { new: true, runValidators: true, context: 'query' }, (err, CoordiRem)=>{
                if(err){
                    res.status(400).json({
                        ok: false,
                        msg: 'ocurrio un error al momento de borrar el coordinador',
                        err
                        })
                    }
                res.json({
                    ok:true,
                    message: 'Muy bien coordinador borrado con exito',
                    coordinador: CoordiRem
       });
    });
});
/***************FIN DEL DELETE **************/
module.exports = app;